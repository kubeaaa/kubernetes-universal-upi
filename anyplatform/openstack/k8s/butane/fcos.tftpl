---
variant: fcos
version: 1.4.0
ignition:
  config:
    ${sources}

kernel_arguments:
  should_exist:
    - ipv6.disable=1
    - audit=0
storage:
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: ${host}

    - path: /etc/systemd/resolved.conf.d/dns_servers.conf
      overwrite: true
      mode: 0644
      contents:
        inline: |
          [Resolve]
          DNS=%{ for ns in dns ~}${ns} %{ endfor ~}

          Domains=%{ for domain in domains ~}${domain} %{ endfor ~}

    - path: /etc/systemd/resolved.conf.d/50-no-dns-stub.conf
      contents:
        inline: |
          [Resolve]
          DNSStubListener=no

    - path: /etc/NetworkManager/conf.d/10-dns-resolved.conf
      contents:
        inline: |
          # See "man 5 NetworkManager.conf" for details.
          #
          [main]
          dns=none
          rc-manager=unmanaged
          systemd-resolved=false

    %{ for ca,source in ca_anchors }
    - path: /etc/pki/ca-trust/source/anchors/${ca}
      mode: 0444
      contents:
        source: ${source}
    %{ endfor }

    - path: /etc/containerd/config.toml
      overwrite: true
      mode: 0644
      contents:
        inline: |
          version = 2

          [plugins]
            [plugins."io.containerd.grpc.v1.cri"]
              [plugins."io.containerd.grpc.v1.cri".cni]
                bin_dir = "/usr/libexec/cni/"
                conf_dir = "/etc/cni/net.d"
            [plugins."io.containerd.internal.v1.opt"]
              path = "/var/lib/containerd/opt"
            [plugins."io.containerd.grpc.v1.cri".registry]
              config_path = "/etc/containerd/certs.d"

    %{ for ns,registry in image_mirrors }
    - path: /etc/containerd/certs.d/${ns}/hosts.toml
      mode: 0644
      contents:
        inline: |
          %{ for host in registry.hosts }
          [host."${host}"]
            capabilities = [%{ for capability in registry.capabilities }"${capability}", %{ endfor }]
            ca = ${registry.ca}
            skip_verify = ${registry.skip_verify}
          %{ endfor }
    %{ endfor }

    %{ for ns,registry in image_mirrors }
    - path: /etc/containers/registries.conf.d/${ns}.conf
      mode: 0644
      contents:
        inline: |
          [[registry]]
          prefix = "${ns}/"
          insecure=${ registry.skip_verify }
          blocked = false
          location="${ns}"

          %{ for host in registry.hosts }
          [[registry.mirror]]
          location="${ element(flatten(regexall("^(http.?\\:\\/{2})(\\w.*)$", host)), 1) }"
          insecure=${ registry.skip_verify }
          %{ endfor }
    %{ endfor }

    - path: /etc/motd
      overwrite: true
      mode: 0644
      contents:
        inline: |
          __________________________________________________________________________
          
               ATTENTION! ATTENTION! ATTENTION! ATTENTION! ATTENTION! ATTENTION!
          __________________________________________________________________________
          
                       L'ACCÈS NON AUTORISÉ À CET APPAREIL EST INTERDIT.
          
          Le fait d'accéder ou de se maintenir, frauduleusement, dans tout ou partie
          d'un système de traitement automatisé de données est puni de deux ans
          d'emprisonnement et de 60 000 € d'amende.

          Lorsqu'il en est résulté soit la suppression ou la modification de données
          contenues dans le système, soit une altération du fonctionnement de ce
          système, la peine est de trois ans d'emprisonnement et de 100 000 €
          d'amende.

          Lorsque les infractions prévues aux deux premiers alinéas ont été commises
          à l'encontre d'un système de traitement automatisé de données à caractère
          personnel mis en œuvre par l'Etat, la peine est portée à cinq ans
          d'emprisonnement et à 150 000 € d'amende.

          cf. Articles 323-1 à 323-7 du Code pénal
          (https://www.legifrance.gouv.fr/codes/id/LEGIARTI000006418329)

          Contact <securite-si@localdomain>
          __________________________________________________________________________

    - path: /etc/chrony.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          %{ for ntp_server in ntp_pool ~}server ${ntp_server} iburst
          %{ endfor }
          driftfile /var/lib/chrony/drift
          makestep 1.0 3
          rtcsync
          keyfile /etc/chrony.keys
          ntsdumpdir /var/lib/chrony
          leapsectz right/UTC
          logdir /var/log/chrony

    - path: /etc/sysctl.d/98-ipv6.conf
      contents:
        inline: |
          # Disable for all interfaces
          net.ipv6.conf.all.disable_ipv6=1
          net.ipv6.conf.default.disable_ipv6=1
          # The protocol must be disabled all specific interfaces as well.
          net.ipv6.conf.lo.disable_ipv6=1

    - path: /usr/local/bin/no-ipv6.sh
      overwrite: true
      mode: 0774
      contents:
        inline: |
          #!/usr/bin/env bash
          set -euo pipefail
          # Disable IPv6 on all specific interfaces as well.
          for con in $(nmcli -t -f UUID con); do
              nmcli connection modify $con ipv6.method "disabled"
              nmcli connection down $con
              nmcli connection up $con
          done

    - path: /etc/zincati/config.d/90-disable-auto-updates.toml
      contents:
        inline: |
          [updates]
          enabled = false

    - path: /etc/profile.d/proxy.sh
      overwrite: true
      mode: 0644
      contents:
        inline: |
          %{ for k, v in proxy ~}${k}="${v}"
          %{ endfor }

  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/Europe/Paris
    - path: /etc/resolv.conf
      target: /run/systemd/resolve/resolv.conf
      overwrite: true

  ${disks}

  ${filesystems}

systemd:
  units:
    - name: rpm-ostreed.service
      dropins:
        - name: 99-proxy.conf
          contents: |
            [Service]
            EnvironmentFile=/etc/profile.d/proxy.sh

    - name: zincati.service
      dropins:
        - name: 99-proxy.conf
          contents: |
            [Service]
            EnvironmentFile=/etc/profile.d/proxy.sh

    - name: rpm-ostree-countme.service
      dropins:
        - name: 99-proxy.conf
          contents: |
            [Service]
            EnvironmentFile=/etc/profile.d/proxy.sh

    - name: no-ipv6.service
      enabled: true
      contents: |
        [Unit]
        Description=Disable IPv6 stack on all connections
        Wants=network-online.target
        After=network-online.target

        [Service]
        Type=simple
        RemainAfterExit=yes

        ExecStart=/usr/local/bin/no-ipv6.sh

        Restart=on-failure
        RestartSec=10

        [Install]
        WantedBy=multi-user.target
